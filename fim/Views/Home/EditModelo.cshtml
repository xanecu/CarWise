@using fim.Controllers;
@model fim.Models.modelo

@{
    ViewBag.Title = "EditModelo";

}

<h2>EditModelo</h2>


@using (Html.BeginForm("EditModelo", "Home", FormMethod.Post, new { id = "frm", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>modelo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.idmodelo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idmodelo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.idmodelo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modelo1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modelo1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modelo1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cilindrada, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cilindrada, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cilindrada, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.potencia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.potencia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.potencia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ano, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ano, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ano, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.combustivel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.combustivel, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.combustivel, EnumHelper.GetSelectList(typeof(HomeController.COMBUSTÍVEL)), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.combustivel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codmarca, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.codmarca, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model=>model.codmarca,ViewBag.marcas as SelectList  ,
                                            new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.codmarca, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fotomodelo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fotomodelo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fotomodelo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                <input type="file" name="fich" id="fich" onchange="previewFile(this);" />
                <br />
                <img src="" alt="" id="foto" />
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@

@section valida{
    <script>


        $.validator.addMethod("alfa", function (valor, element) {
            var regex = /Mod:\w+/g;
            return this.optional(element) || regex.test(valor);
        }, "Padrão Errado");


        $("#frm").validate({
            errorClass: 'help-block animation-slideDown', // You can change the animation class for a different entrance animation - check animations page  
            errorElement: 'div',
            errorPlacement: function (error, e) {
                e.parents('.form-group > div').append(error);
            },
            highlight: function (e) {

                $(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
                $(e).closest('.help-block').remove();
            },
            success: function (e) {
                e.closest('.form-group').removeClass('has-success has-error');
                e.closest('.help-block').remove();
            },  
             errorClass: 'help-block animation-slideDown', // You can change the animation class for a different entrance animation - check animations page  
            errorElement: 'div',
            errorPlacement: function (error, e) {
                e.parents('.form-group > div').append(error);
            },
            highlight: function (e) {

                $(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
                $(e).closest('.help-block').remove();
            },
            success: function (e) {
                e.closest('.form-group').removeClass('has-success has-error');
                e.closest('.help-block').remove();
            },  


            rules: {
                ano: { required: true, range: [2010, 2020] },
                modelo1: {alfa:true}
            },
            messages: {
                ano: { required: "Ano é Obrigatório", range: "Ano acima de 2010" }
            }
            });
    </script>

}

@section editafoto{
    <script>
        function previewFile(input) {

            var file = $("input[type=file]").get(0).files[0];

            if (file) {
                var reader = new FileReader();

                reader.onload = function () {
                    $("#foto").attr("src", reader.result);
                }

                reader.readAsDataURL(file);
            }
        }


    </script>


}